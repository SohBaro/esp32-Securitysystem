#include <WiFi.h>
#include <HTTPClient.h>

// WiFi credentials
const char* ssid = "YOUR_WIFI_SSID";       // Replace with your Wi-Fi SSID
const char* password = "YOUR_WIFI_PASSWORD"; // Replace with your Wi-Fi password

// Flask server details
const char* serverIP = "192.168.255.201";    // Replace with your Flask server's IP address
const int serverPort = 5000;               // Flask server port

#define TRIG_PIN 5         // Ultrasonic Trigger
#define ECHO_PIN 4         // Ultrasonic Echo
#define BUZZER_PIN 26      // Buzzer
#define NOISE_PIN 12       // Noise sensor digital output pin

void setup() {
  Serial.begin(115200);
  
  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");

  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
  pinMode(BUZZER_PIN, OUTPUT);
  pinMode(NOISE_PIN, INPUT);
  digitalWrite(BUZZER_PIN, LOW); // Buzzer OFF initially
}

void loop() {
  long duration;
  float distance;

  // Trigger the ultrasonic pulse
  digitalWrite(TRIG_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIG_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG_PIN, LOW);

  // Measure echo duration
  duration = pulseIn(ECHO_PIN, HIGH);
  distance = duration * 0.034 / 2;

  // Read noise sensor (digital)
  int noiseDetected = digitalRead(NOISE_PIN); // HIGH means noise detected

  // Debug output
  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.print(" cm | Noise Detected: ");
  Serial.println(noiseDetected == HIGH ? "YES" : "NO");

  // Trigger buzzer for 3 seconds if either sensor detects
  if (distance < 15 || noiseDetected == HIGH) {
    digitalWrite(BUZZER_PIN, HIGH);
    Serial.println("Alert! Buzzer ON for 3 seconds.");

    // Send HTTP POST request to Flask server
    if (WiFi.status() == WL_CONNECTED) {
      HTTPClient http;
      String url = "http://" + String(serverIP) + ":" + String(serverPort) + "/trigger";
      
      http.begin(url);
      http.addHeader("Content-Type", "application/json");
      String payload = "{\"sensor\": \"ultrasonic\"}";
      if (noiseDetected == HIGH) {
        payload = "{\"sensor\": \"noise\"}";
      }

      int httpResponseCode = http.POST(payload);
      if (httpResponseCode > 0) {
        Serial.printf("HTTP POST response code: %d\n", httpResponseCode);
      } else {
        Serial.printf("HTTP POST failed, error: %s\n", http.errorToString(httpResponseCode).c_str());
      }
      http.end();
    }

    delay(3000); // Buzzer stays on for 3 seconds
    digitalWrite(BUZZER_PIN, LOW);
  }

  delay(200); // Small delay before next reading
}
